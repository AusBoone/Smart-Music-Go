# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ published ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.23.8

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install frontend deps and run e2e tests
      run: |
        cd ui/frontend
        npm ci
        npm run build
        npx playwright install --with-deps
        npx playwright test

  docker:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
      - name: Trigger deployment
        if: secrets.DEPLOY_WEBHOOK != ''
        run: curl -X POST ${{ secrets.DEPLOY_WEBHOOK }}
